#!/bin/bash

# PostgreSQL High Availability Lab Setup Script (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π

set -e

echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ PostgreSQL HA –∫–ª–∞—Å—Ç–µ—Ä–∞ —Å pgbouncer..."

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö..."
docker-compose down -v 2>/dev/null || true
docker system prune -f 2>/dev/null || true

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
mkdir -p postgres-ha-lab/{master,slave,pgbouncer,client,scripts,logs}
cd postgres-ha-lab

# =================
# Docker Compose —Ñ–∞–π–ª (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô)
# =================
cat > docker-compose.yml <<'EOF'
networks:
  postgres_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  # PostgreSQL Master
  postgres_master:
    image: postgres:latest
    container_name: postgres_master
    hostname: postgres_master
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    volumes:
      - ./master/init-master.sql:/docker-entrypoint-initdb.d/01-init-master.sql
      - ./master/setup-master.sh:/docker-entrypoint-initdb.d/02-setup-master.sh
      - postgres_master_data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
    ports:
      - "5432:5432"
    networks:
      postgres_network:
        ipv4_address: 172.20.0.10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10

  # PostgreSQL Slave
  postgres_slave:
    image: postgres:latest
    container_name: postgres_slave
    hostname: postgres_slave
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGPASSWORD: postgres123
    volumes:
      - postgres_slave_data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
      - ./slave/setup-slave.sh:/setup-slave.sh
    entrypoint: |
      bash -c "
        chmod +x /setup-slave.sh
        /setup-slave.sh
      "
    ports:
      - "5433:5432"
    networks:
      postgres_network:
        ipv4_address: 172.20.0.11
    depends_on:
      postgres_master:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # PgBouncer –¥–ª—è –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –Ω–∞–≥—Ä—É–∑–∫–∏
  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    hostname: pgbouncer
    environment:
      DATABASE_URL: postgres://postgres:postgres123@postgres_master:5432/testdb
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 100
      DEFAULT_POOL_SIZE: 20
      RESERVE_POOL_SIZE: 5
      AUTH_TYPE: trust
    ports:
      - "6432:5432"
    networks:
      postgres_network:
        ipv4_address: 172.20.0.20
    depends_on:
      postgres_master:
        condition: service_healthy
      postgres_slave:
        condition: service_healthy

  # –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –º–∞—à–∏–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  postgres_client:
    image: postgres:latest
    container_name: postgres_client
    hostname: postgres_client
    environment:
      PGPASSWORD: postgres123
    volumes:
      - ./client:/client
      - ./scripts:/scripts
    networks:
      postgres_network:
        ipv4_address: 172.20.0.30
    command: tail -f /dev/null
    depends_on:
      - pgbouncer

volumes:
  postgres_master_data:
  postgres_slave_data:
EOF

# =================
# Master –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø)
# =================
cat > master/setup-master.sh <<'EOF'
#!/bin/bash

echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Å—Ç–µ—Ä–∞ PostgreSQL..."

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
    CREATE USER replicator REPLICATION LOGIN ENCRYPTED PASSWORD 'repl123';
EOSQL

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PostgreSQL –¥–ª—è —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏
cat >> /var/lib/postgresql/data/postgresql.conf <<-EOCONF
# Replication settings
wal_level = replica
max_wal_senders = 3
wal_keep_size = 64
hot_standby = on
archive_mode = on
archive_command = 'test ! -f /var/lib/postgresql/data/archive/%f && cp %p /var/lib/postgresql/data/archive/%f'

# Logging
log_statement = 'all'
log_connections = on
log_disconnections = on
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
EOCONF

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ pg_hba.conf –¥–ª—è —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏
cat >> /var/lib/postgresql/data/pg_hba.conf <<-EOHBA
# Replication connections
host    replication     replicator      172.20.0.0/16           md5
host    all             all             172.20.0.0/16           md5
EOHBA

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∞—Ä—Ö–∏–≤–æ–≤
mkdir -p /var/lib/postgresql/data/archive
chown postgres:postgres /var/lib/postgresql/data/archive

echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PostgreSQL –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
pg_ctl reload -D /var/lib/postgresql/data
EOF

cat > master/init-master.sql <<'EOF'
-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    product_name VARCHAR(100) NOT NULL,
    quantity INTEGER NOT NULL DEFAULT 1,
    price DECIMAL(10,2) NOT NULL,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) DEFAULT 'pending'
);

-- –í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
INSERT INTO users (username, email) VALUES 
    ('user1', 'user1@example.com'),
    ('user2', 'user2@example.com'),
    ('user3', 'user3@example.com');

INSERT INTO orders (user_id, product_name, quantity, price) VALUES
    (1, 'Laptop', 1, 999.99),
    (2, 'Mouse', 2, 25.50),
    (3, 'Keyboard', 1, 75.00);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
CREATE OR REPLACE FUNCTION log_transaction()
RETURNS TRIGGER AS $$
BEGIN
    RAISE NOTICE 'Transaction executed on table: %, Operation: %, Time: %', 
                 TG_TABLE_NAME, TG_OP, NOW();
    RETURN COALESCE(NEW, OLD);
END;
$$ LANGUAGE plpgsql;

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
CREATE TRIGGER users_log_trigger
    AFTER INSERT OR UPDATE OR DELETE ON users
    FOR EACH ROW EXECUTE FUNCTION log_transaction();

CREATE TRIGGER orders_log_trigger
    AFTER INSERT OR UPDATE OR DELETE ON orders
    FOR EACH ROW EXECUTE FUNCTION log_transaction();
EOF

# =================
# Slave –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø)
# =================
cat > slave/setup-slave.sh <<'EOF'
#!/bin/bash

echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ slave PostgreSQL..."

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞
echo "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞..."
until pg_isready -h postgres_master -p 5432 -U postgres; do
    echo "–ú–∞—Å—Ç–µ—Ä –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –æ–∂–∏–¥–∞–Ω–∏–µ..."
    sleep 3
done

echo "–ú–∞—Å—Ç–µ—Ä –≥–æ—Ç–æ–≤, –Ω–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏..."

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å –º–∞—Å—Ç–µ—Ä–∞
PGPASSWORD=repl123 pg_basebackup -h postgres_master -D /var/lib/postgresql/data -U replicator -v -P -W

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è standby —Ä–µ–∂–∏–º–∞
cat >> /var/lib/postgresql/data/postgresql.conf <<-EOCONF
# Standby configuration
primary_conninfo = 'host=postgres_master port=5432 user=replicator password=repl123'
hot_standby = on
EOCONF

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ standby.signal
touch /var/lib/postgresql/data/standby.signal

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
chown -R postgres:postgres /var/lib/postgresql/data
chmod 700 /var/lib/postgresql/data

echo "–ó–∞–ø—É—Å–∫ PostgreSQL –≤ —Ä–µ–∂–∏–º–µ standby..."
exec docker-entrypoint.sh postgres
EOF

# =================
# PgBouncer –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–£–ü–†–û–©–ï–ù–ù–ê–Ø)
# =================
# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ 
mkdir -p pgbouncer

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è pgbouncer
cat > pgbouncer/switch_to_slave.sh <<'EOF'
#!/bin/bash
docker stop pgbouncer
docker run -d --name pgbouncer_temp --network postgres-ha-lab_postgres_network --ip 172.20.0.20 -p 6432:5432 \
  -e DATABASE_URL="postgres://postgres:postgres123@postgres_slave:5432/testdb" \
  -e POOL_MODE=transaction -e MAX_CLIENT_CONN=100 -e DEFAULT_POOL_SIZE=20 -e AUTH_TYPE=trust \
  edoburu/pgbouncer:latest
docker rm pgbouncer
docker rename pgbouncer_temp pgbouncer
EOF

cat > pgbouncer/switch_to_master.sh <<'EOF'
#!/bin/bash
docker stop pgbouncer
docker run -d --name pgbouncer_temp --network postgres-ha-lab_postgres_network --ip 172.20.0.20 -p 6432:5432 \
  -e DATABASE_URL="postgres://postgres:postgres123@postgres_master:5432/testdb" \
  -e POOL_MODE=transaction -e MAX_CLIENT_CONN=100 -e DEFAULT_POOL_SIZE=20 -e AUTH_TYPE=trust \
  edoburu/pgbouncer:latest
docker rm pgbouncer
docker rename pgbouncer_temp pgbouncer
EOF

chmod +x pgbouncer/*.sh

# =================
# –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ —Å–∫—Ä–∏–ø—Ç—ã (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï)
# =================
cat > client/test_connections.sh <<'EOF'
#!/bin/bash

echo "=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π ==="

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –º–∞—Å—Ç–µ—Ä—É —á–µ—Ä–µ–∑ pgbouncer
echo "1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –º–∞—Å—Ç–µ—Ä—É —á–µ—Ä–µ–∑ pgbouncer:"
docker exec postgres_client bash -c "PGPASSWORD=postgres123 psql -h pgbouncer -p 5432 -U postgres -d testdb -c \"SELECT 'Connected to PgBouncer -> ' || version();\""

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –º–∞—Å—Ç–µ—Ä—É –Ω–∞–ø—Ä—è–º—É—é
echo "2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –º–∞—Å—Ç–µ—Ä—É –Ω–∞–ø—Ä—è–º—É—é:"
docker exec postgres_client bash -c "PGPASSWORD=postgres123 psql -h postgres_master -p 5432 -U postgres -d testdb -c \"SELECT 'Master direct: ' || version();\""

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–ª–µ–π–≤—É –¥–ª—è —á—Ç–µ–Ω–∏—è
echo "3. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–ª–µ–π–≤—É (—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ):"
docker exec postgres_client bash -c "PGPASSWORD=postgres123 psql -h postgres_slave -p 5432 -U postgres -d testdb -c \"SELECT 'Slave connection: ' || version();\""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏
echo "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –º–∞—Å—Ç–µ—Ä–µ:"
docker exec postgres_client bash -c "PGPASSWORD=postgres123 psql -h postgres_master -p 5432 -U postgres -d testdb -c \"SELECT COUNT(*) as users_count FROM users;\""

echo "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–ª–µ–π–≤–µ:"
docker exec postgres_client bash -c "PGPASSWORD=postgres123 psql -h postgres_slave -p 5432 -U postgres -d testdb -c \"SELECT COUNT(*) as users_count FROM users;\""
EOF

cat > client/load_test.sh <<'EOF'
#!/bin/bash

echo "=== –¢–µ—Å—Ç –Ω–∞–≥—Ä—É–∑–∫–∏ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π ==="

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ bc –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
command -v bc >/dev/null 2>&1 || { echo "bc –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è"; BC_AVAILABLE=false; } || BC_AVAILABLE=true

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
run_transaction() {
    local session_id=$1
    local iterations=$2
    
    for ((i=1; i<=iterations; i++)); do
        # –ü—Ä–æ—Å—Ç–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã –±–µ–∑ bc
        local price=$(( i * 11 ))
        
        docker exec postgres_client bash -c "PGPASSWORD=postgres123 psql -h pgbouncer -p 5432 -U postgres -d testdb <<EOSQL
BEGIN;
INSERT INTO users (username, email) VALUES ('user_${session_id}_${i}', 'user${session_id}_${i}@test.com');
INSERT INTO orders (user_id, product_name, quantity, price) 
    VALUES (currval('users_id_seq'), 'Product_${session_id}_${i}', ${i}, ${price}.99);
COMMIT;
EOSQL"
        echo "Session $session_id: Transaction $i completed"
        sleep 1
    done
}

# –ó–∞–ø—É—Å–∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö —Å–µ—Å—Å–∏–π
echo "–ó–∞–ø—É—Å–∫ 3 –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö —Å–µ—Å—Å–∏–π..."
run_transaction 1 5 &
run_transaction 2 5 &
run_transaction 3 5 &

wait
echo "–í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo "=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Å–ª–µ –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ ==="
docker exec postgres_client bash -c "PGPASSWORD=postgres123 psql -h pgbouncer -p 5432 -U postgres -d testdb -c \"
SELECT 'Master - Users:' as info, COUNT(*) as count FROM users
UNION ALL
SELECT 'Master - Orders:', COUNT(*) FROM orders;
\""

sleep 3

docker exec postgres_client bash -c "PGPASSWORD=postgres123 psql -h postgres_slave -p 5432 -U postgres -d testdb -c \"
SELECT 'Slave - Users:' as info, COUNT(*) as count FROM users
UNION ALL
SELECT 'Slave - Orders:', COUNT(*) FROM orders;
\""
EOF

# =================
# –°–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï)
# =================
cat > scripts/setup.sh <<'EOF'
#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ PostgreSQL HA –∫–ª–∞—Å—Ç–µ—Ä–∞..."

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö..."
docker-compose down -v 2>/dev/null || true

# –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–æ–≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p logs

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
docker-compose up -d

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 45

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏
echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏:"
docker exec postgres_master psql -U postgres -d testdb -c "SELECT client_addr, state FROM pg_stat_replication;" || echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ —É–¥–∞–ª–∞—Å—å"

echo "‚úÖ –ö–ª–∞—Å—Ç–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
echo ""
echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
echo "  Master:    localhost:5432"
echo "  Slave:     localhost:5433"
echo "  PgBouncer: localhost:6432"
echo ""
echo "–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "  cd client && bash test_connections.sh"
echo "  cd client && bash load_test.sh"
EOF

cat > scripts/simulate_failure.sh <<'EOF'
#!/bin/bash

echo "üí• –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–∫–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–∞..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∞—Å—Ç–µ—Ä–∞
echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ postgres_master..."
docker stop postgres_master

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –æ—Ç–∫–∞–∑–∞..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ pgbouncer
echo "üìã –õ–æ–≥–∏ PgBouncer:"
docker logs pgbouncer | tail -20

# –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ pgbouncer
echo "üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ pgbouncer (–¥–æ–ª–∂–Ω–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è –æ—à–∏–±–∫–æ–π):"
timeout 10 docker exec postgres_client bash -c "PGPASSWORD=postgres123 psql -h pgbouncer -p 5432 -U postgres -d testdb -c \"SELECT NOW();\"" || echo "–û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"

echo "üí° –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: bash scripts/failover.sh"
EOF

cat > scripts/failover.sh <<'EOF'
#!/bin/bash

echo "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Å–ª–µ–π–≤..."

# –ü—Ä–æ–º–æ—Ü–∏—è —Å–ª–µ–π–≤–∞ –≤ –º–∞—Å—Ç–µ—Ä
echo "–ü—Ä–æ–º–æ—Ü–∏—è —Å–ª–µ–π–≤–∞ –≤ –º–∞—Å—Ç–µ—Ä..."
docker exec -u postgres postgres_slave bash -c "
rm -f /var/lib/postgresql/data/standby.signal
pg_ctl reload -D /var/lib/postgresql/data
"

# –û–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ—Ü–∏–∏
sleep 10

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ pgbouncer –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ª–µ–π–≤–∞
echo "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ PgBouncer –Ω–∞ slave —Å–µ—Ä–≤–µ—Ä..."
docker stop pgbouncer || true
docker rm pgbouncer || true

# –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ pgbouncer —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ slave
docker run -d --name pgbouncer --network postgres-ha-lab_postgres_network --ip 172.20.0.20 -p 6432:5432 \
  -e DATABASE_URL="postgres://postgres:postgres123@postgres_slave:5432/testdb" \
  -e POOL_MODE=transaction -e MAX_CLIENT_CONN=100 -e DEFAULT_POOL_SIZE=20 -e AUTH_TYPE=trust \
  edoburu/pgbouncer:latest

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ pgbouncer..."
sleep 5

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
sleep 5

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –Ω–æ–≤–æ–º—É –º–∞—Å—Ç–µ—Ä—É:"
docker exec postgres_client bash -c "
PGPASSWORD=postgres123 psql -h pgbouncer -p 5432 -U postgres -d testdb -c \"
SELECT 'Failover successful - connected to: ' || version();
INSERT INTO users (username, email) VALUES ('failover_test', 'failover@test.com');
SELECT 'New user added during failover, total users: ' || COUNT(*) FROM users;
\"
"

echo "‚úÖ Failover –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
EOF

cat > scripts/recovery.sh <<'EOF'
#!/bin/bash

echo "üîß –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –ó–∞–ø—É—Å–∫ —Å—Ç–∞—Ä–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –∫–∞–∫ –Ω–æ–≤–æ–≥–æ —Å–ª–µ–π–≤–∞
echo "–ó–∞–ø—É—Å–∫ –±—ã–≤—à–µ–≥–æ –º–∞—Å—Ç–µ—Ä–∞..."
docker start postgres_master

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞..."
sleep 15

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—ã–≤—à–µ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –∫–∞–∫ —Å–ª–µ–π–≤–∞
echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏..."
docker exec postgres_master bash -c "
rm -f /var/lib/postgresql/data/postmaster.pid
echo 'primary_conninfo = '\''host=postgres_slave port=5432 user=replicator password=repl123'\''' >> /var/lib/postgresql/data/postgresql.conf
touch /var/lib/postgresql/data/standby.signal
"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
docker restart postgres_master

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."
sleep 20

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏:"
docker exec postgres_slave psql -U postgres -d testdb -c "SELECT client_addr, state FROM pg_stat_replication;" || echo "–†–µ–ø–ª–∏–∫–∞—Ü–∏—è –µ—â–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è..."

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pgbouncer –¥–ª—è –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏
echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ PgBouncer –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–±–æ–∏–º–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏..."
docker stop pgbouncer || true
docker rm pgbouncer || true

# –ó–∞–ø—É—Å–∫ pgbouncer —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –Ω–æ–≤–æ–º—É –º–∞—Å—Ç–µ—Ä—É (–±—ã–≤—à–∏–π slave)
docker run -d --name pgbouncer --network postgres-ha-lab_postgres_network --ip 172.20.0.20 -p 6432:5432 \
  -e DATABASE_URL="postgres://postgres:postgres123@postgres_slave:5432/testdb" \
  -e POOL_MODE=transaction -e MAX_CLIENT_CONN=100 -e DEFAULT_POOL_SIZE=20 -e AUTH_TYPE=trust \
  edoburu/pgbouncer:latest

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ pgbouncer..."
sleep 5

echo "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
echo "  –ê–∫—Ç–∏–≤–Ω—ã–π –º–∞—Å—Ç–µ—Ä: postgres_slave:5432"
echo "  –°–ª–µ–π–≤ –¥–ª—è —á—Ç–µ–Ω–∏—è: postgres_master:5432"
echo "  PgBouncer: –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–∞–º–∏"
EOF

cat > scripts/status.sh <<'EOF'
#!/bin/bash

echo "üìä –°—Ç–∞—Ç—É—Å PostgreSQL HA –∫–ª–∞—Å—Ç–µ—Ä–∞"
echo "================================="

# –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üê≥ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps

echo ""
echo "üîç –°—Ç–∞—Ç—É—Å —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏:"
# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ç–æ —Å–µ–π—á–∞—Å –º–∞—Å—Ç–µ—Ä
if docker exec postgres_master psql -U postgres -d testdb -c "SELECT pg_is_in_recovery();" 2>/dev/null | grep -q "f"; then
    echo "–ú–∞—Å—Ç–µ—Ä: postgres_master"
    docker exec postgres_master psql -U postgres -d testdb -c "SELECT client_addr, state, sent_lsn, write_lsn FROM pg_stat_replication;" 2>/dev/null || echo "–†–µ–ø–ª–∏–∫–∞—Ü–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞"
elif docker exec postgres_slave psql -U postgres -d testdb -c "SELECT pg_is_in_recovery();" 2>/dev/null | grep -q "f"; then
    echo "–ú–∞—Å—Ç–µ—Ä: postgres_slave"
    docker exec postgres_slave psql -U postgres -d testdb -c "SELECT client_addr, state, sent_lsn, write_lsn FROM pg_stat_replication;" 2>/dev/null || echo "–†–µ–ø–ª–∏–∫–∞—Ü–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞"
else
    echo "–ù–µ —É–¥–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–∞—Å—Ç–µ—Ä —Å–µ—Ä–≤–µ—Ä"
fi

echo ""
echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π PgBouncer:"
docker logs pgbouncer 2>/dev/null | tail -10 || echo "PgBouncer –ª–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"

echo ""
echo "üíæ –î–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ:"
if docker exec postgres_master psql -U postgres -d testdb -c "SELECT COUNT(*) as users FROM users; SELECT COUNT(*) as orders FROM orders;" 2>/dev/null; then
    echo "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —Å postgres_master"
elif docker exec postgres_slave psql -U postgres -d testdb -c "SELECT COUNT(*) as users FROM users; SELECT COUNT(*) as orders FROM orders;" 2>/dev/null; then
    echo "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —Å postgres_slave"
else
    echo "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∏ —Å –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
fi
EOF

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
chmod +x client/*.sh
chmod +x scripts/*.sh
chmod +x master/setup-master.sh
chmod +x slave/setup-slave.sh

# =================
# –ú–∞–Ω—É–∞–ª –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
# =================
cat > README.md <<'EOF'
# PostgreSQL High Availability Lab

## –û–ø–∏—Å–∞–Ω–∏–µ
–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤—ã—Å–æ–∫–æ–¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ PostgreSQL –∫–ª–∞—Å—Ç–µ—Ä–∞ —Å —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–µ–π –∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏.

## –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
- **postgres_master**: –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä PostgreSQL (172.20.0.10:5432)
- **postgres_slave**: –°–ª–µ–π–≤ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ (172.20.0.11:5432)
- **pgbouncer**: –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –Ω–∞–≥—Ä—É–∑–∫–∏ (172.20.0.20:5432)
- **postgres_client**: –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –º–∞—à–∏–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (172.20.0.30)

## –≠—Ç–∞–ø—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

### 1. –ó–∞–ø—É—Å–∫ –∫–ª–∞—Å—Ç–µ—Ä–∞
```bash
bash scripts/setup.sh
```

### 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
```bash
cd client
bash test_connections.sh
```

### 3. –ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
```bash
cd client
bash load_test.sh
```

### 4. –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–∫–∞–∑–∞
```bash
bash scripts/simulate_failure.sh
```

### 5. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
```bash
bash scripts/failover.sh
```

### 6. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
```bash
bash scripts/recovery.sh
```

### 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
```bash
bash scripts/status.sh
```

## –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è
- **–ß–µ—Ä–µ–∑ PgBouncer**: `PGPASSWORD=postgres123 psql -h localhost -p 6432 -U postgres -d testdb`
- **–ü—Ä—è–º–æ –∫ –º–∞—Å—Ç–µ—Ä—É**: `PGPASSWORD=postgres123 psql -h localhost -p 5432 -U postgres -d testdb`
- **–ü—Ä—è–º–æ –∫ —Å–ª–µ–π–≤—É**: `PGPASSWORD=postgres123 psql -h localhost -p 5433 -U postgres -d testdb`

## –û—Å—Ç–∞–Ω–æ–≤–∫–∞
```bash
docker-compose down
```

## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
```bash
docker-compose down -v
docker system prune -f
```

## –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫

### –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è:
```bash
docker-compose down -v
docker system prune -f
bash scripts/setup.sh
```

### –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤:
```bash
docker logs postgres_master
docker logs postgres_slave
docker logs pgbouncer
```
EOF

# =================
# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô)
# =================
cat > demo.sh <<'EOF'
#!/bin/bash

echo "üéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è PostgreSQL HA –∫–ª–∞—Å—Ç–µ—Ä–∞"
echo "======================================"

echo "1Ô∏è‚É£  –ó–∞–ø—É—Å–∫ –∫–ª–∞—Å—Ç–µ—Ä–∞..."
bash scripts/setup.sh

read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π..."

echo ""
echo "2Ô∏è‚É£  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π..."
cd client
bash test_connections.sh
cd ..

read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∫ –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é..."

echo ""
echo "3Ô∏è‚É£  –ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..."
cd client
bash load_test.sh
cd ..

read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞..."

echo ""
echo "4Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞..."
bash scripts/status.sh

read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –æ—Ç–∫–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–∞..."

echo ""
echo "5Ô∏è‚É£  –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–∫–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–∞..."
bash scripts/simulate_failure.sh

read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."

echo ""
echo "6Ô∏è‚É£  –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."
bash scripts/failover.sh

read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–æ—Å–ª–µ failover..."

echo ""
echo "7Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –ø–æ—Å–ª–µ failover..."
bash scripts/status.sh

read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

echo ""
echo "8Ô∏è‚É£  –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
bash scripts/recovery.sh

read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏..."

echo ""
echo "9Ô∏è‚É£  –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
bash scripts/status.sh

echo ""
echo "‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: docker-compose logs [service_name]"
echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: docker-compose down"
EOF

chmod +x demo.sh

echo ""
echo "‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
find . -type f | head -20
echo ""
echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:"
echo "   cd postgres-ha-lab"
echo "   bash demo.sh"
echo ""
echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: postgres-ha-lab/README.md"